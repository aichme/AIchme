{"description": "### Impact\n\nAffected configurations:\n\n- Single-origin JupyterHub deployments\n- JupyterHub deployments with user-controlled applications running on subdomains or peer subdomains of either the Hub or a single-user server.\n\nBy tricking a user into visiting a malicious subdomain, the attacker can achieve an XSS directly affecting the former's session. More precisely, in the context of JupyterHub, this XSS could achieve the following:\n\n- Full access to JupyterHub API and user's single-user server, e.g.\n  - Create and exfiltrate an API Token\n  - Exfiltrate all files hosted on the user's single-user server: notebooks, images, etc.\n  - Install malicious extensions. They can be used as a backdoor to silently regain access to victim's session anytime.\n\n### Patches\n\nTo prevent cookie-tossing:\n\n- Upgrade to JupyterHub 4.1 (both hub and user environment)\n- enable per-user domains via `c.JupyterHub.subdomain_host = \"https://mydomain.example.org\"`\n- set `c.JupyterHub.cookie_host_prefix_enabled = True` to enable domain-locked cookies\n\nor, if available (applies to earlier JupyterHub versions):\n\n- deploy jupyterhub on its own domain, not shared with any other services\n- enable per-user domains via `c.JupyterHub.subdomain_host = \"https://mydomain.example.org\"`", "methods": ["Tricked a user into visiting a malicious subdomain to achieve Self-XSS.", "Used Cookie Tossing to achieve XSS in JupyterHub.", "Created an XSS to gain full access to JupyterHub API and user's single-user server.", "Exfiltrated an API Token.", "Exfiltrated all files hosted on the user's single-user server.", "Installed malicious extensions as a backdoor to silently regain access to victim's session.", "Used JupyterHub 4.1 or earlier with user-controlled applications running on subdomains or peer subdomains.", "Deployed JupyterHub on a shared domain with other services.", "Failed to enable domain-locked cookies."]}