{"description": "### Impact\n\nUsing carefully crafted input, an attacker may be able to sneak arbitrary HTML and CSS through Sanitize `>= 3.0.0, < 6.0.2` when Sanitize is configured to use the built-in \"relaxed\" config or when using a custom config that allows `style` elements and one or more CSS at-rules. This could result in XSS (cross-site scripting) or other undesired behavior when the malicious HTML and CSS are rendered in a browser.\n\n### Patches\n\nSanitize `>= 6.0.2` performs additional escaping of CSS in `style` element content, which fixes this issue.\n\n### Workarounds\n\nUsers who are unable to upgrade can prevent this issue by using a Sanitize config that doesn't allow `style` elements, using a Sanitize config that doesn't allow CSS at-rules, or by manually escaping the character sequence `</` as `<\\/` in `style` element content.\n\n### Credit\n\nThis issue was found by @cure53 during an audit of a project that uses Sanitize and was reported by one of that project's maintainers. Thank you!", "methods": ["Used Cross-site Scripting (XSS) via insufficient neutralization of `style` element content.", "Injected arbitrary HTML and CSS through Sanitize.", "Used crafted input to sneak malicious HTML and CSS through Sanitize.", "Executed XSS or other undesired behavior when malicious HTML and CSS were rendered in a browser.", "Escaped CSS in `style` element content to prevent the issue.", "Manually escaped the character sequence `</` as `<\\/` in `style` element content."]}