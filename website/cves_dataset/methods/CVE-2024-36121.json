{"description": "### Summary\nBoringSSLAEADContext keeps track of how many OHTTP responses have been sent and uses this sequence number to calculate the appropriate nonce to use with the encryption algorithm. \nUnfortunately, two separate errors combine which would allow an attacker to cause the sequence number to overflow and thus the nonce to repeat.\n\n### Details\n1. There is no overflow detection or enforcement of the maximum sequence value. (This is a missed requirement from the draft Chunked Oblivious OHTTP RFC and so should be inherited from the HPKE RFC 9180, Section 5.2).\n2. The sequence number (seq) is stored as 32-bit int which is relatively easy to overflow.\n\nhttps://github.com/netty/netty-incubator-codec-ohttp/blob/1ddadb6473cd3be5491d114431ed4c1a9f316001/codec-ohttp-hpke-classes-boringssl/src/main/java/io/netty/incubator/codec/hpke/boringssl/BoringSSLAEADContext.java#L112-L114\n\n### Impact\nIf the BoringSSLAEADContext is used to encrypt more than 2^32 messages then the AES-GCM nonce will repeat.\nRepeating a nonce with AES-GCM results in both confidentiality and integrity compromise of data encrypted with the associated key.\n", "methods": ["Uses a flaw in the BoringSSLAEADContext to cause a sequence number overflow.", "Causes the AES-GCM nonce to repeat.", "Compromises confidentiality and integrity of data encrypted with the associated key."]}