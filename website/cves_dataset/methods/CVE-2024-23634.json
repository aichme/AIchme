{"description": "### Summary\nAn arbitrary file renaming vulnerability exists that enables an authenticated administrator with permissions to modify stores through the REST Coverage Store or Data Store API to rename arbitrary files and directories with a name that does not end in \".zip\".\n\n### Details\nStore file uploads rename zip files to have a \".zip\" extension if it doesn't already have one before unzipping the file.  This is fine for file and url upload methods where the files will be in a specific subdirectory of the data directory but, when using the external upload method, this allows arbitrary files and directories to be renamed.\n\n### PoC\nCoverage Store Example (workspace and store name are irrelevant and any valid coverage format can be used):\ncurl -XPUT -H\"Content-Type:application/zip\" -u\"admin:geoserver\" -d\"/file/to/move\" \"http://localhost:8080/geoserver/rest/workspaces/a/coveragestores/b/external.geotiff\"\nData Store Example (workspace and store name and data store format are irrelevant):\ncurl -XPUT -H\"Content-Type:application/zip\" -u\"admin:geoserver\" -d\"/file/to/move\" \"http://localhost:8080/geoserver/rest/workspaces/a/datastores/b/external.c\"\n\n### Impact\nRenaming GeoServer files will most likely result in a denial of service, either completely preventing GeoServer from running or effectively deleting specific resources (such as a workspace, layer or style).  In some cases, renaming GeoServer files could revert to the default settings for that file which could be relatively harmless like removing contact information or have more serious consequences like allowing users to make OGC requests that the customized settings would have prevented them from making.  The impact of renaming non-GeoServer files depends on the specific environment although some sort of denial of service is a likely outcome.\n\n### References\nhttps://osgeo-org.atlassian.net/browse/GEOS-11213\nhttps://github.com/geoserver/geoserver/pull/7289\n", "methods": ["Used arbitrary file renaming to achieve denial of service.", "Used curl to send malicious requests to GeoServer REST API.", "Used authentication bypass to access GeoServer with admin credentials.", "Used external upload method to upload arbitrary files.", "Used PUT requests to modify GeoServer files and directories.", "Used HTTP headers to specify file type (Content-Type: application/zip).", "Used API endpoint manipulation to rename files and directories."]}