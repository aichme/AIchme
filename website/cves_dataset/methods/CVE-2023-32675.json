{"description": "### Impact\nin contracts with at least one regular nonpayable function, due to the callvalue check being inside of the selector section, it is possible to send funds to the default function by using less than 4 bytes of calldata, even if the default function is marked `nonpayable`. this applies to contracts compiled with vyper<=0.3.7.\n```vyper\n# @version 0.3.7\n\n# implicitly nonpayable\n@external\ndef foo() -> uint256:\n    return 1\n\n# implicitly nonpayable\n@external\ndef __default__():\n    # could receive ether here\n    pass\n```\n\n### Patches\nthis was fixed by the removal of the global calldatasize check in https://github.com/vyperlang/vyper/commit/02339dfda0f3caabad142060d511d10bfe93c520.\n\n### Workarounds\ndon't use nonpayable default functions\n\n", "methods": ["Used a vulnerability in Vyper contracts to send funds to a default function.", "Exploited a bug in Vyper contracts with less than 4 bytes of calldata.", "Used a vulnerable version of Vyper (<=0.3.7) to execute malicious transactions.", "Exploited a bug in the callvalue check in the selector section of Vyper contracts."]}