{"description": "### Impact\n\nAny users who are using the `wget` or `dom` extractors and view the content they output. \n\nThe impact is potentially severe if you are logged in to the ArchiveBox admin site in the same browser session and view an archived malicious page designed to target your ArchiveBox instance. Malicious JS could potentially act using your logged-in admin credentials and add/remove/modify snapshots, add/remove/modify ArchiveBox users, and generally do anything an admin user could do. \n\nThe impact is less severe for non-logged-in users, as malicious JS cannot *modify* any archives, but it can still *read* all the other archived content by fetching the snapshot index and iterating through it.\n\nBecause all of ArchiveBox's archived content is served from the same host and port as the admin panel, when archived pages are viewed the JS executes in the same context as all the other archived pages (and the admin panel), defeating most of the browser's usual CORS/CSRF security protections and leading to this issue.\n\n### Patches\n\nFollow here for progress on mitigating this issue: https://github.com/ArchiveBox/ArchiveBox/issues/239\n\n### Workarounds\n\nDisable the risky extractors by setting [`archivebox config --set SAVE_WGET=False SAVE_DOM=False`](https://github.com/ArchiveBox/ArchiveBox/wiki/Configuration#save_wget), ensure you are always logged out, or serve only a [static HTML version](https://github.com/ArchiveBox/ArchiveBox/wiki/Publishing-Your-Archive#2-export-and-host-it-as-static-html) of your archive.\n\n### References\n\n- https://en.wikipedia.org/wiki/Cross-site_request_forgery\n- https://github.com/ArchiveBox/ArchiveBox#caveats\n- https://github.com/ArchiveBox/ArchiveBox/wiki/Security-Overview\n- https://github.com/ArchiveBox/ArchiveBox/wiki/Publishing-Your-Archive#security-concerns", "methods": ["Executed malicious JavaScript in the admin context.", "Leveraged browser's same-origin policy bypass through serving archived content from the same host and port as the admin panel.", "Used cross-site request forgery (CSRF) to act as an admin user.", "Executed malicious JavaScript to read archived content.", "Executed malicious JavaScript to add/remove/modify snapshots, users, and other admin actions."]}