{"description": "### Impact\nWhen an \"Internal System Error\" occurs in the JSPUI, then entire exception (including stack trace) is available. Information in this stacktrace may be useful to an attacker in launching a more sophisticated attack.  This vulnerability only impacts the JSPUI.\n\n_This vulnerability does NOT impact the XMLUI or 7.x._\n\n### Patches\n\n_DSpace 6.x:_\n* Fixed in 6.4 via commit: https://github.com/DSpace/DSpace/commit/afcc6c3389729b85d5c7b0230cbf9aaf7452f31a\n* 6.x patch file: https://github.com/DSpace/DSpace/commit/afcc6c3389729b85d5c7b0230cbf9aaf7452f31a.patch (may be applied manually if an immediate upgrade to 6.4 or above is not possible)\n\n_DSpace 5.x:_\n* The 6.x patch file can also be applied to an older 5.x installation.\n* Alternatively, you can simply apply the workaround documented below.  The detailed error information embedded in `internal.jsp` is not necessary for the JSPUI to function.\n\n#### Apply the patch to your DSpace\nIf at all possible, we recommend upgrading your DSpace site based on the upgrade instructions. However, if you are unable to do so, you can manually apply the above patches as follows:\n1. Download the appropriate patch file to the machine where DSpace is running\n2. From the `[dspace-src]` folder, apply the patch, e.g. `git apply [name-of-file].patch`\n3. Now, update your DSpace site (based loosely on the Upgrade instructions). This generally involves three steps:\n    1. Rebuild DSpace, e.g. `mvn -U clean package`  (This will recompile all DSpace code)\n    2. Redeploy DSpace, e.g. `ant update`  (This will copy all updated WARs / configs to your installation directory). Depending on your setup you also may need to copy the updated WARs over to your Tomcat webapps folder.\n    3. Restart Tomcat\n\n### Workarounds\n\nThe detailed error information embedded in `internal.jsp` is not necessary for the JSPUI to function.  Because this error information is also available in the `dspace.log` files, it does not need to be displayed in `internal.jsp`.\n\nModify your `internal.jsp`, and disable the display of the error message. This is most easily done by setting the returned exception to \"null\" at all times.  For example, add a new line between line number 43 and 44\n\n```\n// This line should exist around line number 43\nThrowable ex = (Throwable) request.getAttribute(\"javax.servlet.error.exception\");\n// Add workaround for security issue. Ensure exception is always set to null.\nex = null;\n// This line should exist around line number 44\nif(ex == null) out.println(\"No stack trace available<br/>\");\n```\n\n### References\nDiscovered & reported by Ozkan Erdogan (Brunel University London)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at security@dspace.org", "methods": ["Used JSPUI's \"Internal System Error\" page to print exceptions and stack traces without sanitization.", "Used detailed error information embedded in `internal.jsp` to display stack traces.", "Used `dspace.log` files to display error information.", "Used `internal.jsp` to display error messages.", "Used `dspace.log` files to display detailed error information.", "Used `git apply` to apply patches.", "Used `mvn -U clean package` to rebuild DSpace.", "Used `ant update` to redeploy DSpace.", "Used `mvn -U clean package` to recompile DSpace code.", "Used `ant update` to copy updated WARs and configs to installation directory.", "Used `git apply` to manually apply patches.", "Used `mvn -U clean package` to recompile DSpace code after applying patches.", "Used `ant update` to redeploy DSpace after applying patches.", "Used `dspace.log` files to display error information instead of `internal.jsp`.", "Used `internal.jsp` to display a generic error message instead of stack trace."]}