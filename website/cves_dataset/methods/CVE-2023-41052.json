{"description": "### Impact\nThe order of evaluation of the arguments of the builtin functions `uint256_addmod`, `uint256_mulmod`, `ecadd` and `ecmul` does not follow source order.\n\u2022 For `uint256_addmod(a,b,c)` and `uint256_mulmod(a,b,c)`, the order is `c,a,b`.\n\u2022 For `ecadd(a,b)` and `ecmul(a,b)`, the order is `b,a`.\n\nNote that this behaviour is problematic when the evaluation of one of the arguments produces side effects that other arguments depend on. \n\n### Patches\nhttps://github.com/vyperlang/vyper/pull/3583\n\n### Workarounds\nWhen using builtins from the list above, make sure that the arguments of the expression do not produce side effects or, if one does, that no other argument is dependent on those side effects.\n\n### References\n_Are there any links users can visit to find out more?_\n", "methods": ["Incorrect order of evaluation of side effects for some builtins.", "Incorrect order of evaluation of arguments for builtins uint256_addmod, uint256_mulmod, ecadd, and ecmul.", "Builtins uint256_addmod and uint256_mulmod evaluate arguments in the order c, a, b.", "Builtins ecadd and ecmul evaluate arguments in the order b, a.", "Arguments of builtins may produce side effects that other arguments depend on.", "Side effects of argument evaluation can lead to incorrect results.", "Builtins uint256_addmod, uint256_mulmod, ecadd, and ecmul have incorrect argument evaluation order."]}