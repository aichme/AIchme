{"description": "All 2.0.X, 2.1.X, 2.2.X, 2.3.X, 2.4.X, 2.5.X, and 2.6.X versions of the Symfony HttpFoundation component are affected by this security issue.\n\nThis issue has been fixed in Symfony 2.3.27, 2.5.11, and 2.6.6. Note that no fixes are provided for Symfony 2.0, 2.1, 2.2, and 2.4 as they are not maintained anymore.\n\n### Description\nThe Symfony\\Component\\HttpFoundation\\Request class provides a mechanism that ensures it does not trust HTTP header values coming from a \"non-trusted\" client. Unfortunately, it assumes that the remote address is always a trusted client if at least one trusted proxy is involved in the request; this allows a man-in-the-middle attack between the latest trusted proxy and the web server.\n\nThe following methods are impacted: getPort(), isSecure(), and getHost(), and getClientIps().\n\n### Resolution\nAll impacted methods now check that the remote address is trusted, which fixes the issue.\n\nThe patch for this issue is available [here](https://github.com/symfony/symfony/pull/14166).", "methods": ["Man-in-the-middle attack between a trusted proxy and the web server.", "Impersonation of a trusted client."]}