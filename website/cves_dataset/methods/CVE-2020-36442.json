{"description": "An issue was discovered in the beef crate before 0.5.0 for Rust. \nAffected versions of this crate did not have a `T: Sync` bound in the `Send` impl for `Cow<'_, T, U>`. This allows users to create data races by making `Cow` contain types that are (Send && !Sync) like `Cell<_>` or `RefCell<_>`.\n\nSuch data races can lead to memory corruption.\n\nThe flaw was corrected in commit d1c7658 by adding trait bounds `T: Sync` and `T::Owned: Send` to the `Send` impl for `Cow<'_, T, U>`.\n", "methods": ["Created data races in memory by using `Cow` with types that are `Send && !Sync` like `Cell<_>` or `RefCell<_>`.", "Caused memory corruption due to data races."]}