{"description": "### Impact\n\nThis vulnerability impacts applications using the [omniauth-apple](https://github.com/nhosoya/omniauth-apple) strategy of OmniAuth and using the `info.email` field of OmniAuth's [Auth Hash Schema](https://github.com/omniauth/omniauth/wiki/Auth-Hash-Schema) for any kind of identification.  The value of this field may be set to any value of the attacker's choice including email addresses of other users.\n\nFor example, an application using omniauth-apple with the following code will be impacted:\n```ruby\ndef omniauth_callback\n    auth_hash = request.env['omniauth.auth']\n    @authenticated_user = User.find_by(email: auth_hash.info.email)\nend\n```\n\nApplications not using `info.email` for identification but are instead using the `uid` field are not impacted in the same manner.  Note, these applications may still be negatively affected if the value of `info.email` is being used for other purposes.\n\n### Patches\n\nApplications using affected versions of omniauth-apple are advised to upgrade to omniauth-apple version 1.0.1 or later.\n\n### Workarounds\n\nIf unable to upgrade to a patched version, monkey patching `OmniAuth::Strategies::Apple#email` as follows is advised as a workaround:\n\n```ruby\nmodule OmniAuth\n  module Strategies\n    class Apple\n      def email\n        id_info['email']\n      end\n    end\n  end\nend\n```", "methods": ["Used a vulnerability in the omniauth-apple gem to fake email addresses during authentication.", "Manipulated the `info.email` field of OmniAuth's Auth Hash Schema.", "Exploited a flaw in the `omniauth_callback` method to impersonate users.", "Used a vulnerable version of the omniauth-apple gem (prior to 1.0.1) to carry out the attack."]}