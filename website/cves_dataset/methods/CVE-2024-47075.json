{"description": "### Summary\nA DOM Clobbering vulnerability has been discovered in `layui` that can lead to Cross-site Scripting (XSS) on web pages where attacker-controlled HTML elements (e.g., `img` tags with unsanitized `name` attributes) are present.\n\nIt's worth noting that we\u2019ve identifed similar issues in other popular client-side libraries like Webpack ([CVE-2024-43788](https://github.com/webpack/webpack/security/advisories/GHSA-4vvj-4cpr-p986)) and Vite ([CVE-2024-45812](https://github.com/vitejs/vite/security/advisories/GHSA-64vr-g452-qvp3)), which might serve as valuable references.\n\n###  Backgrounds\n\nDOM Clobbering is a type of code-reuse attack where the attacker first embeds a piece of non-script, seemingly benign HTML markups in the webpage (e.g. through a post or comment) and leverages the gadgets (pieces of js code snippet) living in the existing libraries to transform it into executable code. \n\n### Impact\n\nThis vulnerability can lead to cross-site scripting (XSS) on websites that uses `layui` library and allow users to inject certain scriptless HTML tags with improperly sanitized `name` or `id` attributes.\n\n### Patch\n\nThis problem has been patched in Layui 2.9.17. You can find the official fix announcement at: \nhttps://layui.dev/notes/share/security-currentscript.html", "methods": ["Uses DOM Clobbering to lead to Cross-site Scripting (XSS) on web pages with attacker-controlled HTML elements.", "Embeds non-script HTML markups in the webpage to transform into executable code.", "Leverages gadgets in existing libraries to execute code.", "Injects scriptless HTML tags with improperly sanitized `name` or `id` attributes.", "Uses code-reuse attack to transform benign HTML into executable code."]}