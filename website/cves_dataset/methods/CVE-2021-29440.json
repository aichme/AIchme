{"description": "### Impact\n\nTwig processing of static pages can be enabled in the front matter by any administrative user allowed to create or edit pages. \nAs the Twig processor runs unsandboxed, this behavior can be used to gain arbitrary code execution and elevate privileges on the instance.\n\n### Patches\n\nThe issue was addressed by preventing dangerous functions from being called in Twig templates. A configuration option has been added to manually allow arbitrary PHP functions (`system.twig.safe_functions`) and filters (`system.twig.safe_filters`). \n\nFutures major versions of Grav may disable this functionality by default. \n\n### Workarounds\n\nBlocking access to the `/admin` path from untrusted sources will reduce the probability of exploitation. \n\n### References\n\n- https://portswigger.net/research/server-side-template-injection\n- https://blog.sonarsource.com/grav-cms-code-execution-vulnerabilities\n\n### For more information\n\nIf you have any questions or comments about this advisory, you can contact:\n  - The original reporters, by sending an email to vulnerability.research [at] sonarsource.com;\n  - The maintainers, by opening an issue on this repository.", "methods": ["Server-side template injection via Twig processing of static pages.", "Arbitrary code execution via Twig processor running unsandboxed.", "Privilege escalation via Twig processor running unsandboxed.", "Configuration manipulation via Twig templates.", "Code injection via Twig templates.", "Arbitrary PHP function execution via Twig templates.", "Arbitrary PHP filter execution via Twig templates.", "Blocking access to the `/admin` path to reduce exploitation probability."]}