{"description": "### Impact\nThe implementation of `dlpack.to_dlpack` can be made to use uninitialized memory resulting in further memory corruption. This is because the pybind11 glue code assumes that the argument is a tensor:\nhttps://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/python/tfe_wrapper.cc#L1361\n\nHowever, there is nothing stopping users from passing in a Python object instead of a tensor.\n```python\nIn [2]: tf.experimental.dlpack.to_dlpack([2])                                                                                                                                            \n==1720623==WARNING: MemorySanitizer: use-of-uninitialized-value                                                                                                                            \n    #0 0x55b0ba5c410a in tensorflow::(anonymous namespace)::GetTensorFromHandle(TFE_TensorHandle*, TF_Status*) third_party/tensorflow/c/eager/dlpack.cc:46:7\n    #1 0x55b0ba5c38f4 in tensorflow::TFE_HandleToDLPack(TFE_TensorHandle*, TF_Status*) third_party/tensorflow/c/eager/dlpack.cc:252:26\n... \n```\n\nThe uninitialized memory address is due to a `reinterpret_cast`\nhttps://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/python/eager/pywrap_tensor.cc#L848-L850\n\nSince the `PyObject` is a Python object, not a TensorFlow Tensor, the cast to `EagerTensor` fails. \n\n### Patches\nWe have patched the issue in 22e07fb204386768e5bcbea563641ea11f96ceb8 and will release a patch release for all affected versions.\n\nWe recommend users to upgrade to TensorFlow 2.2.1 or 2.3.1.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.", "methods": ["Used a memory corruption technique to exploit a vulnerability in Tensorflow.", "Exploited a use-after-free vulnerability in Tensorflow.", "Used a reinterpret_cast to access uninitialized memory.", "Exploited a lack of input validation in Tensorflow's `dlpack.to_dlpack` function."]}