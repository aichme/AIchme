{"description": "## Summary\nA user with permission to view any collection using redacted hashed fields can get access the raw stored version using the `alias` functionality on the API.\nNormally, these redacted fields will return `**********` however  if we change the request to `?alias[workaround]=redacted` we can instead retrieve the plain text value for the field.\n\n## Steps to reproduce\n- Set up a simple role with read-access to users.\n- Create a new user with the role from the previous step\n- Assign a password to the user\n\nThe easiest way to confirm this vulnerability is by first visiting `/users/me`. You should be presented with a redacted JSON-object.\nNext, visit `/users/me?alias[hash]=password`. This time, the returned JSON object will included the raw password hash instead of the redacted value.\n\n## Workaround\nThis can be avoided by removing permission to view the sensitive fields entirely from users or roles that should not be able to see them.", "methods": ["Used API to extract sensitive data through \"alias\" functionality.", "Used API to bypass data redaction.", "Used API to retrieve raw stored data.", "Used API to access sensitive fields without permission.", "Used API to view sensitive data that should be hidden."]}