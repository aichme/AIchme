{"description": "### Impact\nA XML External Entity (XXE) vulnerability found in the apoc.import.graphml procedure of APOC core plugin in Neo4j graph database. XML External Entity (XXE) injection occurs when the XML parser allows external entities to be resolved. The XML parser used by the apoc.import.graphml procedure was not configured in a secure way and therefore allowed this. \n\nExternal entities can be used to read local files, send HTTP requests, and perform denial-of-service attacks on the application.\n\nAbusing the XXE vulnerability enabled assessors to read local files remotely. Although with the level of privileges assessors had this was limited to one-line files. With the ability to write to the database, any file could have been read. Additionally, assessors noted, with local testing, the server could be crashed by passing in improperly formatted XML. \n\n### Patches\nThe users should aim to use the latest released version compatible with their Neo4j version. The minimum versions containing patch for this vulnerability is 5.5.0. \n\n### Workarounds\nIf you cannot upgrade the library, you can control the\u00a0[allowlist](https://neo4j.com/docs/operations-manual/current/reference/configuration-settings/#config_dbms.security.procedures.allowlist)  of the  procedures\u00a0that can be used in your system.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in\u00a0[neo4j-apoc](https://github.com/neo4j/apoc)\n* Email us at\u00a0[security@neo4j.com](mailto:security@neo4j.com)\n\n### Credits\nWe want to publicly recognise the contribution of Christopher Schneider \u2013 State Farm.\n", "methods": ["Used XXE injection to read local files remotely.", "Used XXE injection to send HTTP requests.", "Used XXE injection to perform denial-of-service attacks.", "Used XXE injection to crash the server by passing in improperly formatted XML."]}