{"description": "### Impact\n\nBy sending specially crafted headers an attacker can bypass the source image domain allowlist, causing the handler to load and return arbitrary images. Because the response is cached globally, this image will then be served to visitors without requiring those headers to be set. XSS can be achieved by requesting a malicious SVG with embedded scripts, which would then be served from the site domain. Note that this does not apply to images loaded in `<img>` tags, as scripts do not execute in this context. The image URL can be set in the header independently of the request URL, meaning any site images that have not previously been cached can have their cache poisoned.\n\n### Patches\nThis problem has been fixed in version 1.2.3\n\n### Workarounds\n\nThe problem is no longer exploitable on Netlify as the CDN now sanitizes the relevant header. Cached content can be cleared by re-deploying the site.\n", "methods": ["Bypassed source image domain allowlist by sending specially crafted headers.", "Loaded and returned arbitrary images.", "Served malicious images to visitors without requiring malicious headers.", "Achieved XSS by requesting malicious SVG with embedded scripts.", "Poisoned cache to serve malicious images from site domain.", "Used Cache Poisoning to achieve Stored XSS.", "Used Improper Host Validation to bypass allowlist."]}