{"description": "Affected versions of `i18next` may fail to sanitize user input when certain configuration options are used. When using the `.init` method, passing interpolation options without passing an `escapeValue` will default to `undefined` rather than the assumed `true`. \n\n## Proof of Concept\n\n```js\nvar init = i18n.init({\n  interpolation: {\n    prefix: \"__\",\n    suffix: \"__\",\n    escapeValue: true\n  }\n}, function(){\n  var test = i18n.t('__firstName__ __lastName__', {\n        firstName: 'Bob',\n        lastName: '[\"foo\",\"bar\"]',\n  });\n  console.log(test);\n});\n```\nWhen `escapeValue` is explicitly passed, the result of `test` is: \n\n```html\n&lt;script&gt;alert(1)&lt;&#x2F;script&gt; Johnson\n```\n\nThis is supposed to be the default. However, if `escapeValue` is not included, the result is the unescaped string: \n \n```html\n<script>alert(1)</script> Johnson\n```\n\n\n## Recommendation\n\nUpdate to version 3.4.4 or later.", "methods": ["Used a vulnerability in the i18next library to inject malicious JavaScript code.", "Injected malicious JavaScript code through user input.", "Failed to sanitize user input, allowing for code injection.", "Exploited a default behavior in the i18next library to execute malicious code.", "Used a library vulnerability to execute arbitrary code."]}