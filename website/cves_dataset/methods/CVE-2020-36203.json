{"description": "ARefss<'a, V> is a type that is assumed to contain objects that are Send + Sync.\n\nIn the affected versions of this crate, Send/Sync traits are unconditionally implemented for ARefss<'a, V>.\n\nBy using the ARefss::map() API, we can insert a !Send or !Sync object into ARefss<'a, V>. After that, it is possible to create a data race to the inner object of ARefss<'a, V>, which can lead to undefined behavior & memory corruption.\n\nThe flaw was corrected in commit `6dd7ca0` by adding trait bound V: Send + Sync to ARefss::map() API.", "methods": ["Introduced a data race condition through the ARefss::map() API by inserting a !Send or !Sync object.", "Exploited the lack of trait bounds on ARefss::map() API to create a data race condition.", "Created a data race to the inner object of ARefss<'a, V> leading to undefined behavior and memory corruption."]}