{"description": "### Impact\nUnder certain cases, a saved model can trigger use of uninitialized values during code execution. This is caused by having tensor buffers be filled with the default value of the type but forgetting to [default initialize the quantized floating point types in Eigen](https://github.com/tensorflow/tensorflow/blob/f70160322a579144950dff1537dcbe3c7c09d6f5/third_party/eigen3/unsupported/Eigen/CXX11/src/FixedPoint/FixedPointTypes.h#L61-L104):\n\n```cc\nstruct QUInt8 {\n  QUInt8() {}\n  // ...\n  uint8_t value;\n};\n\nstruct QInt16 {\n  QInt16() {}\n  // ...\n  int16_t value;\n};\n\nstruct QUInt16 {\n  QUInt16() {}\n  // ...\n  uint16_t value;\n};\n\nstruct QInt32 {\n  QInt32() {}\n  // ...\n  int32_t value;\n};\n```\n\n### Patches\nWe have patched the issue in GitHub commit [ace0c15a22f7f054abcc1f53eabbcb0a1239a9e2](https://github.com/tensorflow/tensorflow/commit/ace0c15a22f7f054abcc1f53eabbcb0a1239a9e2) and will release TensorFlow 2.4.0 containing the patch. TensorFlow nightly packages after this commit will also have the issue resolved.\n\nSince this issue also impacts TF versions before 2.4, we will patch all releases between 1.15 and 2.3 inclusive.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.", "methods": ["Uninitialized memory access in TensorFlow can be exploited to trigger use of uninitialized values during code execution.", "The issue is caused by default initialization of quantized floating point types in Eigen.", "The issue has been patched in GitHub commit ace0c15a22f7f054abcc1f53eabbcb0a1239a9e2."]}