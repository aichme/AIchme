{"description": "Opencast versions prior to 9.10 allow HTTP method spoofing, allowing to change the assumed HTTP method via URL parameter. This allows  attackers to turn HTTP GET requests into PUT requests or an HTTP form to send DELETE requests. This bypasses restrictions otherwise put on these types of requests and aids in cross-site request forgery (CSRF) attacks, which would otherwise not be possible.\n\n### Impact\n\nThe vulnerability allows attackers to craft links or forms which may change the server state. For example, the following GET request would create a new user:\n\n```sh\n% curl -i -u admin:opencast \\\n  'https://legacy.opencast.org/admin-ng/users/test.json?_method=PUT&username=test&password=attack'\nHTTP/2 200\n\u2026\n```\n\nIf an admin is logged in to legacy.opencast.org and accidentally clicks this link, a user will silently be created.\n\n\n### Patches\n\nThis issue is fixed in Opencast 9.10 and 10.0.\n\n### Workarounds\n\nYou can mitigate the problem by setting the `SameSite=Strict` attribute for your cookies. If this is a viable option for you depends on your integrations. We strongly recommend updating in any case.\n\n### References\n\n- [Fix for 10.0](https://github.com/opencast/opencast/commit/59cb6731067283e54f15462be38b6117d8b9ea8b#diff-9c5fb3d1b7e3b0f54bc5c4182965c4fe1f9023d449017cece3005d3f90e8e4d8)\n- [Fix for 9.10](https://github.com/opencast/opencast/commit/8f8271e1085f6f8e306c689d6a56b0bb8d076444)\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [our issue tracker](https://github.com/opencast/opencast/issues)\n* Email us at [security@opencast.org](mailto:security@opencast.org)\n", "methods": ["HTTP method spoofing via URL parameter to change the assumed HTTP method.", "Bypassing restrictions on HTTP GET and PUT requests.", "Cross-site request forgery (CSRF) attacks.", "Creating a new user via a crafted link or form.", "Changing the server state silently.", "Setting the `SameSite=Strict` attribute for cookies as a mitigation.", "Using cookies with `SameSite=Strict` attribute to prevent CSRF attacks.", "Updating to Opencast 9.10 or 10.0 to fix the issue."]}