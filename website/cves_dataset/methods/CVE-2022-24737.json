{"description": "### Impact\nHTTPie have the practical concept of [sessions](https://httpie.io/docs/cli/sessions), which help users to persistently store some of the state that belongs to the outgoing requests and incoming responses on the disk for further usage. As an example, we can make an authenticated request and save it to a [named session](https://httpie.io/docs/cli/named-sessions) called `api`:\n\n```bash\n$ http --session api -a user:pass pie.dev/basic-auth/user/pass\n```\n\n```json\n{\n    \"authenticated\": true,\n    \"user\": \"user\"\n}\n```\n\nSince we have now saved the authentication data to that session, we won\u2018t have to enter it again and again on every invocation. We can simply reference the session, and HTTPie will use the saved state directly from it:\n\n```bash\n$ http --session api pie.dev/basic-auth/user/pass\n```\n\n```json\n{\n    \"authenticated\": true,\n    \"user\": \"user\"\n}\n```\n\nOne particular use case of these sessions is storing cookies (commonly referred to as a `Cookie Jar`). If a response has a `Set-Cookie`\nheader, HTTPie will parse it and store the actual cookie in the session. And from that point on, all outgoing requests will attach that cookie (in the form of a `Cookie` header).\n\nThis is extremely useful, especially when you are dealing with websites which manage their own state on the client-side through cookies.\n\n```bash\n$ http -F --session jar pie.dev/cookies/set/x/y\n```\n\n```json\n{\n    \"cookies\": {\n        \"x\": \"y\"\n    }\n}\n```\n\nBefore `3.1.0`, HTTPie didn\u2018t distinguish between cookies and hosts they belonged. This behavior resulted in the exposure of some cookies when there are redirects originating from the actual host to a third party website, e.g:\n\n```bash\n$ http -F --session jar pie.dev/redirect-to url==https://httpbin.org/cookies\n```\n\n(Pre 3.1.0)\n```json\n{\n    \"cookies\": {\n        \"x\": \"y\"\n    }\n}\n```\n\n(Post 3.1.0)\n```json\n{\n    \"cookies\": {}\n}\n```\n\nThis behavior has been corrected in this release (with taking [RFC 6265 \u2014 HTTP State Management Mechanism](https://datatracker.ietf.org/doc/html/rfc6265) into the consideration).\n\nA huge credit goes to [@Glyph](https://github.com/glyph) for disclosing the original vulnerability to us (through [huntr.dev](http://huntr.dev/)).\n\n### Patches\nWe suggest users to upgrade their HTTPie version to `3.1.0` or higher, and run `httpie cli sessions upgrade` command on their sessions.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us: [`security@httpie.io`](mailto:security@httpie.io)\n\n> Please note that this entry is covered by both [CVE-2022-24737](https://www.cvedetails.com/cve/CVE-2022-24737) and [CVE-2022-0430](https://nvd.nist.gov/vuln/detail/CVE-2022-0430).\n", "methods": ["Used sessions to persistently store sensitive information (e.g. authentication data, cookies) on the disk for further usage.", "Stored cookies (Cookie Jar) in sessions.", "Failed to distinguish between cookies and hosts they belonged to, resulting in exposure of cookies in redirects (pre 3.1.0).", "Used sessions to store cookies from Set-Cookie headers.", "Failed to properly handle redirects and cookie exposure (pre 3.1.0).", "Used sessions to store authentication data (e.g. user credentials)."]}