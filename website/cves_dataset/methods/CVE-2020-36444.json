{"description": "An issue was discovered in the async-coap crate through 2020-12-08 for Rust. \nAffected versions of this crate implement Send/Sync for `ArcGuard<RC, T>` with no trait bounds on `RC`. This allows users to send `RC: !Send` to other threads and also allows users to concurrently access `Rc: !Sync` from multiple threads.\n\nThis can result in memory corruption from data race or other undefined behavior caused by sending `T: !Send` to other threads (e.g. dropping `MutexGuard<T>` in another thread that didn't lock its mutex).\n", "methods": ["Used data races in async-coap crate to cause memory corruption.", "Exploited lack of trait bounds on `RC` to send `T: !Send` to other threads.", "Conducted concurrent access to `Rc: !Sync` from multiple threads."]}