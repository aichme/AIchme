{"description": "### Impact\nThe formatter function that strips comments from a SQL contains a regular expression that is vulnerable to [ReDoS](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS) (Regular Expression Denial of Service). The regular expression may cause exponential backtracking on strings containing many repetitions of '\\r\\n' in SQL comments.\n\n### Patches\nThe issues has been fixed in sqlparse 0.4.2.\n\n### Workarounds\nOnly the formatting feature that removes comments from SQL statements is affected by this regular expression. As a workaround don't use the `sqlformat.format` function with keyword `strip_comments=True` or the `--strip-comments` command line flag when using the `sqlformat` command line tool.\n\n### References\nThis issue was discovered by GitHub team members @erik-krogh and @yoff. It was found using a [CodeQL](https://codeql.github.com/) query which identifies inefficient regular expressions. You can see the results of the query on python-sqlparse by following [this link](https://lgtm.com/query/2223658096471222354/). \n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [sqlparse issue tracker](https://github.com/andialbrecht/sqlparse/issues)\n* Email us at [albrecht.andi@gmail.com](mailto:albrecht.andi@gmail.com)\n", "methods": ["Regular expression denial of service (ReDoS) via a vulnerable regular expression in the StripComments filter.", "Exponential backtracking on strings containing many repetitions of '\\r\\n' in SQL comments.", "Use of CodeQL to identify inefficient regular expressions.", "Use of a CodeQL query to identify the issue in python-sqlparse."]}