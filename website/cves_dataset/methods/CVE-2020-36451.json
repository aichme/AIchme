{"description": "Affected versions of this crate unconditionally implement Send/Sync for `RcuCell<T>`.\nThis allows users to send `T: !Send` to other threads (while `T` enclosed within `RcuCell<T>`), and allows users to concurrently access `T: !Sync` by using the APIs of `RcuCell<T>` that provide access to `&T`.\n\nThis can result in memory corruption caused by data races.", "methods": ["Used a vulnerability in the `rcu_cell` crate to cause data races.", "Allowed concurrent access to unsynchronized data.", "Caused memory corruption due to data races."]}