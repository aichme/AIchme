{"description": "The previously implemented script security sandbox protections prohibiting the use of unsafe AST transforming annotations such as `@Grab` ([2019-01-08 fix for SECURITY-1266](https://www.jenkins.io/security/advisory/2019-01-08/#SECURITY-1266)) could be circumvented through use of various Groovy language features:\n\n- Use of `AnnotationCollector`\n- Import aliasing\n- Referencing annotation types using their full class name\n\nThis allowed users with Overall/Read permission, or the ability to control Jenkinsfile or sandboxed Pipeline shared library contents in SCM, to bypass the sandbox protection and execute arbitrary code on the Jenkins controller.\n\nUsing `AnnotationCollector` is now newly prohibited in sandboxed scripts such as Pipelines. Importing any of the annotations considered unsafe will now result in an error. During the compilation phase, both simple and full class names of prohibited annotations are rejected for element annotations.", "methods": ["Used Groovy language features to bypass sandbox protections.", "Used `AnnotationCollector` to bypass sandbox protection.", "Used import aliasing to bypass sandbox protection.", "Used referencing annotation types using their full class name to bypass sandbox protection.", "Executed arbitrary code on the Jenkins controller."]}