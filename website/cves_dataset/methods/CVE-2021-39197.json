{"description": "### Impact\nbetter_errors prior to 2.8.0 did not implement CSRF protection for its internal requests. It also did not enforce the correct \"Content-Type\" header for these requests, which allowed a cross-origin \"simple request\" to be made without CORS protection. These together left an application with better_errors enabled open to cross-origin attacks.\n\n_As a developer tool, better_errors documentation strongly recommends addition only to the `development` bundle group, so this vulnerability should only affect development environments. Please ensure that your project limits better_errors to the `development` group (or the non-Rails equivalent)._\n\n### Patches\nStarting with release 2.8.x, CSRF protection is enforced. It is recommended that you upgrade to the latest release, or minimally to \"~> 2.8.3\".\n\n### Workarounds\nThere are no known workarounds to mitigate the risk of using older releases of better_errors.\n\n### References\n- Chris Moberly provided [an example attack that uses a now-patched vulnerability of webpack-dev-server in conjunction with Better Errors](https://about.gitlab.com/blog/2021/09/07/why-are-developers-vulnerable-to-driveby-attacks/)\n\n### For more information\nIf you have any questions or comments about this advisory, please\n- Add to the [discussion in better_errors](https://github.com/BetterErrors/better_errors/discussions/507)\n- Open an issue in [better_errors](https://github.com/BetterErrors/better_errors)\n", "methods": ["Cross-Site Request Forgery (CSRF) attack via internal requests without CSRF protection.", "Cross-origin \"simple request\" without CORS protection.", "Lack of enforcement of the \"Content-Type\" header for internal requests.", "Use of a now-patched vulnerability of webpack-dev-server in conjunction with Better Errors."]}