{"description": "### Impact\n\nThe REST API allows executing all actions via POST requests and accepts `text/plain`, `multipart/form-data` or `application/www-form-urlencoded` as content types which can be sent via regular HTML forms, thus allowing cross-site request forgery. With the interaction of a user with programming rights, this allows remote code execution through script macros and thus impacts the integrity, availability and confidentiality of the whole XWiki installation.\n\nFor regular cookie-based authentication, the vulnerability is mitigated by SameSite cookie restrictions but as of March 2023, these are not enabled by default in Firefox and Safari.\n\n### Patches\nThe vulnerability has been patched in XWiki 14.10.8 and 15.2 by requiring a CSRF token header for certain request types that are susceptible to CSRF attacks.\n\n### Workarounds\n\nIt is possible to check for the `Origin` header in a reverse proxy to protect the REST endpoint from CSRF attacks, see [the Jira issue](https://jira.xwiki.org/browse/XWIKI-20135) for an example configuration.\n\n### References\n\n* https://jira.xwiki.org/browse/XWIKI-20135\n* https://github.com/xwiki/xwiki-platform/commit/4c175405faa0e62437df397811c7526dfc0fbae7\n", "methods": ["Uses cross-site request forgery (CSRF) to execute actions via POST requests.", "Allows remote code execution through script macros.", "Uses regular HTML forms to send malicious requests.", "Uses cookie-based authentication, but SameSite cookie restrictions are not enabled by default in Firefox and Safari.", "Requires a CSRF token header for certain request types to prevent CSRF attacks.", "Uses a reverse proxy to check for the `Origin` header to protect the REST endpoint from CSRF attacks."]}