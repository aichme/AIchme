{"description": "### Impact\nInsufficient sanitization / filtering allows for arbitrary JavaScript Injection in Mautic using the bounce management callback function. The values submitted in the \"error\" and \"error_related_to\" parameters of the POST request of the bounce management callback will be permanently stored and executed once the details page of an affected lead is opened by a Mautic user.\n\nAn attacker with access to the bounce management callback function (identified with the Mailjet webhook, but it is assumed this will work uniformly across all kinds of webhooks) can inject arbitrary JavaScript Code into the \"error\" and \"error_related_to\" parameters of the POST request (POST /mailer/<product / webhook>/callback). It is noted that there is no authentication needed to access this function.\n\nThe JavaScript Code is stored permanently in the web application and executed every time an authenticated user views the details page of a single contact / lead in Mautic. This means, arbitrary code can be executed to, e.g., steal or tamper with information.\n\n### Patches\nUpgrade to 3.3.4 or 4.0.0\n\n### Workarounds\nNo\n\n### References\nhttps://github.com/mautic/mautic/releases/tag/3.3.4\nhttps://github.com/mautic/mautic/releases/tag/4.0.0\n\n### For more information\nIf you have any questions or comments about this advisory:\n\n* Email us at [security@mautic.org](mailto:security@mautic.org)\n", "methods": ["Injects arbitrary JavaScript code via insufficient sanitization/filtering.", "Executes arbitrary JavaScript code stored in the web application.", "Steals or tampers with information via arbitrary code execution.", "Uses a stored XSS vulnerability.", "Uses a POST request to inject malicious code.", "Uses a webhook to inject malicious code.", "Executes code without authentication."]}