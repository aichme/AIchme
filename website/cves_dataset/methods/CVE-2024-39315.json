{"description": "### Impact\n\nThe Pomerium user info page (at `/.pomerium`) unintentionally included serialized OAuth2 access and ID tokens from the logged-in user's session. These tokens are not intended to be exposed to end users.\n\nThis issue may be more severe in the presence of an XSS vulnerability in an upstream application proxied through Pomerium. If an attacker could insert a malicious script onto a web page proxied through Pomerium, that script could access these tokens by making a request to the `/.pomerium` endpoint.\n\nUpstream applications that authenticate only the ID token may be vulnerable to user impersonation using a token obtained in this manner.\n\nNote that an OAuth2 access token or ID token by itself is not sufficient to hijack a user's Pomerium session. Upstream applications should not be vulnerable to user impersonation via these tokens provided:\n- the application verifies the [Pomerium JWT](https://www.pomerium.com/docs/capabilities/getting-users-identity) for each request,\n- the connection between Pomerium and the application is secured by mTLS,\n- or the connection between Pomerium and the application is otherwise secured at the network layer.\n\n### Patches\nPatched in Pomerium v0.26.1.\n\n### Workarounds\nNone\n\n### For more information\nIf you have any questions or comments about this advisory:\n\n- Open an issue in [pomerium/pomerium](https://github.com/pomerium/pomerium/issues)\n- Email us at [security@pomerium.com](mailto:security@pomerium.com)\n\nCredit to Vadim Sheydaev, aka Enr1g for reporting this issue.", "methods": ["Exposed OAuth2 access and ID tokens in user info endpoint response.", "Potential for user impersonation via exposed tokens if upstream application is vulnerable.", "Exposed tokens could be accessed by a malicious script via XSS vulnerability in an upstream application."]}