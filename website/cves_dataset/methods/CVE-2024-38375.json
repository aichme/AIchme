{"description": "### Impact\nThe implementation of the following functions were determined to include a use-after-free bug:\n\n* `FetchEvent.client.tlsCipherOpensslName`\n* `FetchEvent.client.tlsProtocol`\n* `FetchEvent.client.tlsClientCertificate`\n* `FetchEvent.client.tlsJA3MD5`\n* `FetchEvent.client.tlsClientHello`\n* `CacheEntry.prototype.userMetadata` of the `fastly:cache` subsystem\n* `Device.lookup` of the `fastly:device` subsystem\n\nThis bug could allow for an unintended data leak if the result of the preceding functions were sent anywhere else, and often results in a Compute service crash causing an HTTP 500 error to be returned. As all requests to Compute are isolated from one another, the only data at risk is data present for a single request.\n\n### Patches\nThis bug has been fixed in version 3.16.0 of the `@fastly/js-compute` package.\n\n### Workarounds\nThere are no workarounds for this bug, any use of the affected functions introduces the possibility of a data leak or crash in guest code.", "methods": ["Use-after-free in host call implementations.", "Data leak through unintended data exposure.", "Crash of Compute service causing HTTP 500 error.", "Isolation bypass through data sent to other requests.", "Data exposure through sending results of preceding functions."]}