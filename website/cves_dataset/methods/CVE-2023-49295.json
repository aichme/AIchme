{"description": "An attacker can cause its peer to run out of memory sending a large number of PATH_CHALLENGE frames. The receiver is supposed to respond to each PATH_CHALLENGE frame with a PATH_RESPONSE frame. The attacker can prevent the receiver from sending out (the vast majority of) these PATH_RESPONSE frames by collapsing the peers congestion window (by selectively acknowledging received packets) and by manipulating the peer's RTT estimate.\n\nI published a more detailed description of the attack and its mitigation in this blog post: https://seemann.io/posts/2023-12-18-exploiting-quics-path-validation/\n\nThere's no way to mitigate this attack, please update quic-go to a version that contains the fix.", "methods": ["Manipulated congestion window to prevent response frames.", "Manipulated RTT estimate to prevent response frames.", "Sent a large number of PATH_CHALLENGE frames to cause denial of service."]}