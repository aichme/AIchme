{"description": "## Impact\n\nAn attacker cooperating with a malicious homeserver can construct messages appearing to have come from another person. Such messages will be marked with a grey shield on some platforms, but this may be missing in others.\n\nThis attack is possible due to the matrix-js-sdk implementing a too permissive [key forwarding](https://spec.matrix.org/v1.3/client-server-api/#key-requests) strategy on the receiving end.\n\nKey forwarding is a mechanism allowing clients to recover from \u201cunable to decrypt\u201d messages when they missed the initial key distribution, at the time the message was originally sent. Examples include accessing message history before they joined the room but also when some network/federation errors have occurred.\n\n## Patches\n\nThe default policy for accepting key forwards has been made more strict in the matrix-js-sdk. matrix-js-sdk will now only accept forwarded keys in response to previously issued requests and only from own, verified devices.\n\nA unique exception to this rule is with the experimental [MSC3061](https://github.com/matrix-org/matrix-spec-proposals/pull/3061), that is forwarding room keys for past messages when invited in a room configured with the proper history visibility setting. Such key forwards are parked upon receipt and are only accepted if the SDK receives an invitation for that room from the inviter in a limited time window.\n\nThe SDK now sets a `trusted` flag on the decrypted message upon decryption, based on whether the key used to decrypt the message was received from a trusted source. Clients need to ensure that messages decrypted with a key with `trusted = false` are decorated appropriately (for example, by showing a warning for such messages).\n\n### Workarounds\n\nAs this attack requires coordination between a malicious homeserver and an attacker, if you trust your homeserver, no particular workaround is needed.\n\n## References\nBlog post: https://matrix.org/blog/2022/09/28/upgrade-now-to-address-encryption-vulns-in-matrix-sdks-and-clients\n\n## For more information\nIf you have any questions or comments about this advisory, e-mail us at security@matrix.org.", "methods": ["Impersonation via key forwarding in Matrix protocol.", "Manipulation of key forwarding policy in matrix-js-sdk.", "Use of permissive key forwarding strategy in matrix-js-sdk.", "Acceptance of forwarded keys from unverified devices.", "Acceptance of forwarded keys in response to previously issued requests.", "Use of trusted flag on decrypted messages.", "Display of warning for messages decrypted with untrusted keys.", "Use of experimental MSC3061 for forwarding room keys.", "Use of history visibility setting for forwarding room keys.", "Acceptance of key forwards in a limited time window."]}