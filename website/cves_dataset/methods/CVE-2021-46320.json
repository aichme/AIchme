{"description": "In OpenZeppelin <=v4.4.0, initializer functions that are invoked separate from contract creation (the most prominent example being minimal proxies) may be reentered if they make an untrusted non-view external call. Once an initializer has finished running it can never be re-executed. However, an exception put in place to support multiple inheritance made reentrancy possible, breaking the expectation that there is a single execution.", "methods": ["Used a vulnerability in OpenZeppelin <=v4.4.0 to reenter an initializer function.", "Made untrusted non-view external calls from an initializer function.", "Exploited a design flaw in multiple inheritance to break the expectation of single execution."]}