{"description": "A security researcher has disclosed a possible XSS vulnerability in the Blade templating engine.\n\nGiven the following two Blade templates:\n\nresources/views/parent.blade.php:\n\n```html\n@section('content')\n<input value=\"{{ $value }}\">\n@show\n```\n\nresources/views/child.blade.php:\n\n```html\n@extends('parent')\n\n@section('content')\n<input value=\"{{ $value }}\">\n@endsection\n```\n\nAnd a route like the following:\n\n```php\nRoute::get('/example', function() {\n    $value = '//localhost/###parent-placeholder-040f06fd774092478d450774f5ba30c5da78acc8## onclick=location.assign(this.value);//';\n\n    return view('child', ['value' => $value]);\n});\n```\n\nThe broken HTML element may be clicked and the user is taken to another location in their browser due to XSS. This is due to the user being able to guess the parent placeholder SHA-1 hash by trying common names of sections. If the parent template contains an exploitable HTML structure an XSS vulnerability can be exposed.\n\nThis vulnerability has been patched by determining the parent placeholder at runtime and using a random hash that is unique to each request.", "methods": ["Used a web application vulnerability (XSS) in the Blade templating engine.", "Used a web application vulnerability to inject malicious code (HTML) into a web page.", "Used a web application vulnerability to redirect the user to a different location in their browser.", "Used a web application vulnerability to execute arbitrary code in the user's browser.", "Used a web application vulnerability to bypass security controls (determining the parent placeholder at runtime).", "Used a web application vulnerability to inject malicious code (HTML) into a web page through a user-controlled input (value)."]}