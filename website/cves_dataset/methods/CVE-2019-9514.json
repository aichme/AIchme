{"description": "Some HTTP/2 implementations are vulnerable to a reset flood, potentially leading to a denial of service. Servers that accept direct connections from untrusted clients could be remotely made to allocate an unlimited amount of memory, until the program crashes. The attacker opens a number of streams and sends an invalid request over each stream that should solicit a stream of RST_STREAM frames from the peer. Depending on how the peer queues the RST_STREAM frames, this can consume excess memory, CPU, or both.\n\n### Specific Go Packages Affected\ngolang.org/x/net/http2", "methods": ["Creates a denial of service by consuming excess memory and CPU.", "Uses an HTTP/2 reset flood to solicit RST_STREAM frames from the peer.", "Exploits a vulnerability in the golang.org/x/net/http2 package."]}