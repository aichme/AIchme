{"description": "### Overview\nDuring our internal security assessment, it was discovered that OpenFGA versions v0.3.0 is vulnerable to authorization bypass under certain conditions.\n\n### Am I Affected?\nYou are affected by this vulnerability if **all** of the following applies:\n\n1.  You are using OpenFGA v0.3.0\n2. You created a model using modeling language v1.1 that applies a type restriction to an object e.g. `define viewer: [user]`\n3. You created tuples based on the aforementioned model, e.g. `document:1#viewer@user:jon`\n4. You updated the previous model by adding a new type and replacing the previous restriction with the newly added type e.g. `define viewer: [employee]`\n5. You use the tuples created against the first model (step 3) and issue checks against the updated model e.g. `user=user:jon, relation=viewer, object:document:1`\n\n### How to fix that?\nUpgrade to version v0.3.1\n\n### Backward Compatibility\nThis update is backward compatible.", "methods": ["Used a vulnerability in OpenFGA v0.3.0 to bypass authorization checks.", "Exploited a type restriction in a model to gain unauthorized access.", "Created tuples based on a model with a type restriction.", "Updated a model to replace a type restriction with a new type.", "Used the updated model to issue checks against previously created tuples."]}