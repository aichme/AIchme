{"description": "### Impact\n\nNew user registrations are able to access anyone's account by only knowing their basic profile information (name, birthday, gender, etc). This includes all app functionality within the app, as well as any authenticated links to Rock-based webpages (such as giving and events).\n\n### Patches\n\nWe have released a security patch on v2.20.0. The solution was to create a duplicate person and then patch the new person with their profile details.\n\n### Workarounds\n\nIf you do not wish to upgrade your app to the new version, you can patch your server by overriding the `create` data source method on the `People` class.\n\n```js\n  create = async (profile) => {\n    const rockUpdateFields = this.mapApollosFieldsToRock(profile);\n    // auto-merge functionality is compromised\n    // we are creating a new user and patching them with profile details\n    const id = await this.post('/People', {\n      Gender: 0, // required by Rock. Listed first so it can be overridden.\n      IsSystem: false, // required by rock\n    });\n    await this.patch(`/People/${id}`, {\n      ...rockUpdateFields,\n    });\n    return id;\n  };\n```\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [support@apollos.app](mailto:support@apollos.app)\n", "methods": ["Used a logic flaw in the application to access unauthorized user accounts.", "Used a logic flaw in the application to access all app functionality and authenticated links.", "Used a logic flaw in the application to access sensitive user data.", "Used a patch to fix the logic flaw in the application.", "Used a workaround to bypass the logic flaw in the application."]}