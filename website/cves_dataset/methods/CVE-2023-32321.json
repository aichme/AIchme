{"description": "Specific vulnerabilities:\n\n* Arbitrary file write in `resource_create` and `package_update` actions, using the `ResourceUploader` object.  Also reachable via `package_create`, `package_revise`, and `package_patch` via calls to `package_update`.\n* Remote code execution via unsafe pickle loading, via Beaker's session store when configured to use the file session store backend.\n* Potential DOS due to lack of a length check on the resource id.\n* Information disclosure: A user with permission to create a resource can access any other resource on the system if they know the id, even if they don't have access to it.\n* Resource overwrite: A user with permission to create a resource can overwrite any resource if they know the id, even if they don't have access to it.  \n\n### Impact\n\nA user with permissions to create or edit a dataset can upload a resource with a specially crafted id to write the uploaded file in an arbitrary location. This can be leveraged to Remote Code Execution via Beaker's insecure pickle loading. \n\n### Patches\n\nAll the above listed vulnerabilities have been fixed in CKAN 2.9.9 and CKAN 2.10.1\nThe patches for CKAN 2.9 should apply easily to previous CKAN versions.", "methods": ["Used arbitrary file write to execute remote code via unsafe pickle loading.", "Used arbitrary file write to overwrite resources.", "Used information disclosure to access unauthorized resources.", "Used arbitrary file write to write files in arbitrary locations.", "Used lack of input validation to cause a Denial of Service (DOS)."]}