{"description": "### Summary\nThere are many sql injections in the project, and some of them are not well filtered, leading to arbitrary file writes, and ultimately leading to RCEs.\nThe proof is as follows\n\n### Details \uff08one of them \uff09\n<img width=\"697\" alt=\"image\" src=\"https://github.com/1Panel-dev/1Panel/assets/129351704/895b7b43-9bc0-44b3-9c84-24c2dcc962da\">\n<img width=\"936\" alt=\"image\" src=\"https://github.com/1Panel-dev/1Panel/assets/129351704/1b8eb866-9865-4bef-a359-53335d709157\">\n<img width=\"684\" alt=\"image\" src=\"https://github.com/1Panel-dev/1Panel/assets/129351704/e865d6d0-7ecb-49f7-b4a2-f1b0bc407986\">\n\n\n### PoC\ncurl 'http://api:30455/api/v1/hosts/command/search' {\"page\":1,\"pageSize\":10,\"groupID\":0,\"orderBy\":\"**3**\",\"order\":\"ascending\",\"name\":\"a\"}\n<img width=\"664\" alt=\"image\" src=\"https://github.com/1Panel-dev/1Panel/assets/129351704/250d5a2a-cb32-44dc-9831-86dbc2f2b43f\">\nfor example as picture . just change orderby\u2018s num we can know How many columns does the data table have.Parameters require strict whitelist filtering\n\n### Impact\nRCE\u3001data leak.\n", "methods": ["SQL injection in the orderBy clause.", "Lack of strict whitelist filtering on parameters.", "Arbitrary file writes.", "Remote Code Execution (RCE).", "Data leak."]}