{"description": "flaskparser.py in Webargs 5.x through 5.5.2 doesn't check that the Content-Type header is application/json when receiving JSON input. If the request body is valid JSON, it will accept it even if the content type is application/x-www-form-urlencoded. This allows for JSON POST requests to be made across domains, leading to CSRF.", "methods": ["Used Cross-Site Request Forgery (CSRF) to make JSON POST requests across domains.", "Exploited a vulnerability in the Content-Type header to bypass validation checks.", "Used a JSON payload to bypass intended security restrictions."]}