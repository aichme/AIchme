{"description": "Affected versions of rgb crate allow viewing and modifying data of any type T wrapped in RGB<T> as bytes, and do not correctly constrain RGB<T> and other wrapper structures to the types for which it is safe to do so.\n\nSafety violation possible for a type wrapped in RGB<T> and similar wrapper structures:\n\n* If T contains padding, viewing it as bytes may lead to exposure of contents of uninitialized memory.\n* If T contains a pointer, modifying it as bytes may lead to dereferencing of arbitrary pointers.\n* Any safety and/or validity invariants for T may be violated.\n\nThe issue was resolved by requiring all types wrapped in structures provided by RGB crate to implement an unsafe marker trait.", "methods": ["Allows out-of-bounds access to data of any type T wrapped in RGB<T>.", "Allows viewing and modifying data of any type T wrapped in RGB<T> as bytes.", "Exposes contents of uninitialized memory.", "Dereferences arbitrary pointers.", "Violates safety and/or validity invariants for T."]}