{"description": "### Impact\n\nThe fugit \"natural\" parser, that turns \"every wednesday at 5pm\" into \"0 17 * * 3\", accepted any length of input and went on attempting to parse it, not returning promptly, as expected. The parse call could hold the thread with no end in sight.\n\nFugit dependents that do not check (user) input length for plausability are impacted.\n\n### Patches\n\nProblem was reported in #104 and the fix was released in [fugit 1.11.1](https://rubygems.org/gems/fugit/versions/1.11.1)\n\n### Workarounds\n\nBy making sure that `Fugit.parse(s)`, `Fugit.do_parse(s)`, `Fugit.parse_nat(s)`, `Fugit.do_parse_nat(s)`, `Fugit::Nat.parse(s)`, and `Fugit::Nat.do_parse(s)` are not fed strings too long. 1000 chars feels ok, while 10_000 chars makes it stall.\n\nIn fewer words, making sure those fugit methods are not fed unvetted input strings.\n\n### References\n\ngh-104\n", "methods": ["Fugit's \"natural\" parser accepts any length of input and does not return promptly, potentially causing a thread to be held indefinitely.", "Fugit dependents that do not check input length for plausability are impacted.", "Fugit methods `Fugit.parse(s)`, `Fugit.do_parse(s)`, `Fugit.parse_nat(s)`, `Fugit.do_parse_nat(s)`, `Fugit::Nat.parse(s)`, and `Fugit::Nat.do_parse(s)` can be fed unvetted input strings, potentially causing a stall."]}