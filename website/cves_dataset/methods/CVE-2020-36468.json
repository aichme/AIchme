{"description": "# Multiple soundness issues in `Ptr` in cgc\n\nAffected versions of this crate have the following issues:\n\n1. `Ptr` implements `Send` and `Sync` for all types, this can lead to data\n   races by sending non-thread safe types across threads.\n\n2. `Ptr::get` violates mutable alias rules by returning multiple mutable\n   references to the same object.\n\n3. `Ptr::write` uses non-atomic writes to the underlying pointer. This means\n   that when used across threads it can lead to data races.", "methods": ["Non-atomic writes in cgc.", "Violation of mutable alias rules.", "Data races by sending non-thread safe types across threads.", "Use of non-atomic writes to the underlying pointer."]}