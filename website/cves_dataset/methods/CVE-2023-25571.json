{"description": "### Impact\n\nThis vulnerability allows a malicious actor with access to add or modify content in an instance of the Backstage software catalog to inject script URLs in the entities stored in the catalog. If users of the catalog then click on said URLs, that can lead to an XSS attack.\n\n### Patches\n\nThis vulnerability has been patched in both the frontend and backend implementations. The default `Link` component from `@backstage/core-components` will now reject `javascript:` URLs, and there is a global override of `window.open` to do the same.\n\nIn addition the catalog model as well as the catalog backend now has additional validation built in that prevents `javascript:` URLs in known annotations.\n\n### Workarounds\n\nThe general practice of limiting access to modifying catalog content and requiring code reviews greatly helps mitigate this vulnerability.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in the [Backstage repository](https://github.com/backstage/backstage)\n* Visit our chat, linked to in the [Backstage README](https://github.com/backstage/backstage)\n", "methods": ["Injects script URLs in entities stored in the catalog to lead to an XSS attack.", "Uses `javascript:` URLs to inject malicious scripts.", "Uses `window.open` to execute malicious scripts.", "Modifies catalog content to inject malicious scripts.", "Lacks validation of `javascript:` URLs in known annotations.", "Lacks validation of `javascript:` URLs in the `Link` component.", "Allows access to modifying catalog content without proper validation."]}