{"description": "The karo gem through 2.5.2 for Ruby allows Remote command injection via the host field.\n\nA flaw in `db.rb` is triggered when handling metacharacters. This may allow a remote attacker to execute arbitrary commands.\n\nIn particular lines 76 and 95 (as of `2014-06-01`) pass unsanitized user supplied input to the command line. \n\n```\n73-      host = \"{@configuration[\"user\"]}@{@configuration[\"host\"]}\"\n74-      cmd  = \"ssh #{host} cat {server_db_config_file}\"\n75-\n76:      server_db_config_output = `{cmd}`\n79-\n--\n89- def drop_and_create_local_database(local_db_config)\n90-      command = case local_db_config[\"adapter\"]\n91-      when \"mysql2\"\n93-      when \"postgresql\"\n95-          dropdb -h #{local_db_config[\"host\"]} -U #{local_db_config[\"username\"]} --if-exists #{local_db_config[\"database\"]}\n```\n\nIf this gem is used in the context of a rails application malicious input could lead to remote command injection. As of version 2.5.2 the affected code lines have not changed.", "methods": ["Used command injection via metacharacters in the host field.", "Executed arbitrary commands via the command line.", "Used unsanitized user-supplied input to execute commands.", "Executed commands via SSH."]}