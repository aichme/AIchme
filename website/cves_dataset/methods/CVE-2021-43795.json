{"description": "### Impact\n\nAn attacker can access an Armeria server's local file system beyond its restricted directory by sending an HTTP request whose path contains `%2F` (encoded `/`), such as `/files/..%2Fsecrets.txt`, bypassing Armeria's path validation logic.\n\n### Patches\n\nArmeria 1.13.4 or above contains the hardened path validation logic that handles `%2F` properly. \n\n### Workarounds\n\nThis vulnerability can be worked around by inserting a decorator that performs an additional validation on the request path, e.g.\n\n```java\nServer\n  .builder()\n  .serviceUnder(\n    \"/files\",\n    FileService\n      .of(...)\n      .decorate((delegate, ctx, req) -> {\n        String path = req.headers().path();\n        if (path.contains(\"%2f\") || path.contains(\"%2F\")) {\n          return HttpResponse.of(HttpStatus.BAD_REQUEST);\n        }\n        return delegate.serve(ctx, req);\n      })\n  )\n  .build()\n```\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [line/armeria](https://github.com/line/armeria)\n* Chat with us at [Slack](https://armeria.dev/s/slack)\n\n### Credits\n\nThis vulnerability was originally reported by Abdallah Zaher ([elcayser-0x0a](https://hackerone.com/elcayser-0x0a?type=user)).", "methods": ["Used path traversal to access an Armeria server's local file system.", "Bypassed path validation logic by sending an HTTP request with a path containing `%2F` (encoded `/`)."]}