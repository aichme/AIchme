{"description": "Configuration as Code Plugin logs the changes it applies to the Jenkins system log. Secrets such as passwords should be masked (i.e. replaced with asterisks) in that log to prevent accidental disclosure. Configuration as Code Plugin inspects the type and looks for a field, getter, or constructor argument corresponding to the property, making the secret detection much more robust for the purpose of log message masking. This was implemented in the [fix for SECURITY-1279 in the 2019-07-31 security advisory](https://www.jenkins.io/security/advisory/2019-07-31/#SECURITY-1279).\n\nThat fix was incomplete and did not cover a log message written to the logger `io.jenkins.plugins.casc.impl.configurators.DataBoundConfigurator`.\n\nConfiguration as Code Plugin now uses the same secret detection for these log messages.\n\nAs a workaround, administrators can configure the logging level of the logger `io.jenkins.plugins.casc.impl.configurators.DataBoundConfigurator` to a level that does not include these messages. Configuration as Code Plugin 1.25 and earlier logs these messages at the `INFO` level, Configuration as Code Plugin 1.26 logs them at `FINE`. See the logging documentation for details.", "methods": ["Insertion of sensitive information into a log file in Jenkins Configuration as Code Plugin.", "Incomplete fix for secret detection in log messages.", "Configuration of logging level to prevent sensitive information disclosure.", "Use of logger `io.jenkins.plugins.casc.impl.configurators.DataBoundConfigurator` for logging sensitive information."]}