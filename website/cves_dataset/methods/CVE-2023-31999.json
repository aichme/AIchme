{"description": "### Impact\n\nAll versions of @fastify/oauth2 used a statically generated `state` parameter at startup time and were used across all requests for all users.\nThe purpose of the Oauth2 `state` parameter is to prevent Cross-Site-Request-Forgery attacks. As such, it should be unique per user and should be connected to the user's session in some way that will allow the server to validate it.\n\n### Patches\n\nv7.2.0 changes the default behavior to store the `state` in a cookie with the `http-only` and `same-site=lax` attributes set. The state is now by default generated for every user.\n\nNote that this contains a breaking change in the `checkStateFunction` function, which now accepts the full `Request` object.\n\n### Workarounds\n\nThere are no known workarounds.\n\n### References\n\n* [Prevent Attacks and Redirect Users with OAuth 2.0 State Parameters](https://auth0.com/docs/secure/attack-protection/state-parameters)\n", "methods": ["Used a vulnerable library (@fastify/oauth2) to bypass CSRF protection.", "Used a static value for the OAuth2 state parameter across all users.", "Failed to store the OAuth2 state parameter in a user-specific manner.", "Failed to validate the OAuth2 state parameter correctly.", "Failed to set the HTTP-only and same-site attributes for the state cookie.", "Failed to generate a unique state parameter for every user."]}