{"description": "### Impact\nIf using affected versions to determine a URL's hostname, the hostname can be spoofed by using a combination of backslash (`\\`) and slash (`/`) characters as part of the scheme delimiter, e.g. `scheme:/\\/\\/\\hostname`. If the hostname is used in security decisions, the decision may be incorrect.\n\nDepending on library usage and attacker intent, impacts may include allow/block list bypasses, SSRF attacks, open redirects, or other undesired behavior.\n\nExample URL: `https:/\\/\\/\\expected-example.com/path`\nEscaped string: `https:/\\\\/\\\\/\\\\expected-example.com/path` (JavaScript strings must escape backslash)\n\nAffected versions incorrectly return no hostname. Patched versions correctly return `expected-example.com`. Patched versions match the behavior of other parsers which implement the [WHATWG URL specification](https://url.spec.whatwg.org/), including web browsers and [Node's built-in URL class](https://nodejs.org/api/url.html).\n\n### Patches\nVersion 1.19.7 is patched against all known payload variants.\n\n### References\nhttps://github.com/medialize/URI.js/releases/tag/v1.19.7 (fix for this particular bypass)\nhttps://github.com/medialize/URI.js/releases/tag/v1.19.6 (fix for related bypass)\nhttps://github.com/medialize/URI.js/releases/tag/v1.19.4 (fix for related bypass)\nhttps://github.com/medialize/URI.js/releases/tag/v1.19.3 (fix for related bypass)\n[PR #233](https://github.com/medialize/URI.js/pull/233) (initial fix for backslash handling)\n\n### For more information\nIf you have any questions or comments about this advisory, open an issue in https://github.com/medialize/URI.js\n\n### Reporter credit\n[ready-research](https://github.com/ready-research) via https://huntr.dev/", "methods": ["Hostname spoofing via backslashes in URL.", "SSRF attacks.", "Open redirects.", "Allow/block list bypasses."]}