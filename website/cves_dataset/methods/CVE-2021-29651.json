{"description": "### Impact\nUsing programmatic access on protected sites, one can get a signed login URL with pomerium_redirect_uri set to an arbitrary URL. Then, if the user has already logged into Pomerium, they will be redirected to the specified pomerium_redirect_uri with a JWT attached. This allows an outside attacker to get a signed login URL that, upon visiting it, will redirect a victim to the attacker\u2019s site. This creates an issue of Open Redirect and, more seriously, JWT leakage.\n\nWith a leaked JWT, the attacker will be able to unveil the victim\u2019s identity (.e.g. email address) by supplying the JWT to the authenticate service or verify.pomerium.com. In addition, if an application integrating Pomerium only verifies the iss claim and others but not the aud claim, the attacker will be able to access it as the victim.\n\n### Specific Go Packages Affected\ngithub.com/pomerium/pomerium/proxy\n\n### Patches\nPatched in Pomerium v0.13.4\n\n### For more information\nIf you have any questions or comments about this advisory\n* Open an issue in [pomerium](http://github.com/pomerium/pomerium)\n* Email us at [security@pomerium.com](mailto:security@pomerium.com)", "methods": ["Used Open Redirect to obtain a signed login URL with a JWT attached.", "Leaked JWT to unveil the victim's identity (e.g. email address).", "Used the leaked JWT to access an application as the victim."]}