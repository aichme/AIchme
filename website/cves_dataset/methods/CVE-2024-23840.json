{"description": "### Summary\nHello ? \n\n`goreleaser release --debug` log shows secret values used in the in the custom publisher.\n\n\nHow to reproduce the issue:\n\n- Define a custom publisher as the one below. Make sure to provide a custom script to the `cmd` field and to provide a secret to `env` \n\n```\n#.goreleaser.yml \npublishers:\n  - name: my-publisher\n  # IDs of the artifacts we want to sign\n    ids:\n      - linux_archives\n      - linux_package\n    cmd: \"./build/package/linux_notarize.sh\"\n    env:\n      - VERSION={{ .Version }}\n      - SECRET_1={{.Env.SECRET_1}}\n      - SECRET_2={{.Env.SECRET_2}}\n```\n\n- run `goreleaser release --debug`\n\nYou should see your secret value in the gorelease log. The log shows also the `GITHUB_TOKEN`\n\nExample:\n\n```\nrunning                                        cmd= ....\nSECRET_1=secret_value\n```\n", "methods": ["Used a command to expose sensitive information (`goreleaser release --debug` shows secrets).", "Used environment variables to store sensitive information (`SECRET_1={{.Env.SECRET_1}}`, `SECRET_2={{.Env.SECRET_2}}`).", "Used a custom script to execute commands (`cmd: \"./build/package/linux_notarize.sh\"`).", "Used a token to authenticate (`GITHUB_TOKEN`)."]}