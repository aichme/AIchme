{"description": "All 2.0.X, 2.1.X, 2.2.X, 2.3.X, 2.4.X, and 2.5.X versions of the Symfony WebProfiler bundle are affected by this security issue.\n\nThis issue has been fixed in Symfony 2.3.19, 2.4.9, and 2.5.4. Note that no fixes are provided for Symfony 2.0, 2.1, and 2.2 as they are not maintained anymore.\n\n### Description\nThe Symfony Web Profiler is a great development tool, but it should not be enabled on production servers. If it is enabled in production, it must be properly secured so that only authorized people have access to it. Developers must be very cautious about this as the Web Profiler gives many sensitive information about a Symfony project and any attackers can exploit many of them. Just to name a few sensitive information: user logins, user cookies, executed SQL statements, ...\n\nThat being said, the import/export feature of the web profiler is exploitable even if the Web Profiler is secured as the form to import a profiler is not protected against CSRF attacks. Combined with the fact that profiles are imported as a PHP serialized string, it makes your application vulnerable to code injection.\n\n### Resolution\nAs the import/export feature of the Web Profiler is not that useful, and because PHP `serialize/unserialize` functions have a long history of vulnerabilities, I decided to remove this feature from the Web interface and move it as CLI commands.\n\nIf you were relying on this feature, you now need to use the `profiler:import` and `profiler:export` Symfony commands provided by the WebProfiler bundle from the command line interface.\n\nThose commands are not enabled by default and must be activated explicitly. For Symfony 2.4+, you can import them in your `app/config.yml` configuration file:\n\n ```\nimport:\n    - { resource: \"%kernel.root_dir%/../vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/Resources/config/commands.xml\" }\n```\nFor Symfony 2.3, you can use the following snippet of code in `app/console`:\n\n```\n$kernel = new AppKernel($env, $debug);\n$application = new Application($kernel);\nif ($kernel->getContainer()->has('profiler')) {\n    $profiler = $kernel->getContainer()->get('profiler');\n    $application->add(new ImportCommand($profiler));\n    $application->add(new ExportCommand($profiler));\n}\n$application->run($input);\n```\nAt this point, I want to reiterate that you should never enable the Symfony Web Profiler on your production servers as this is a development tool. And if you need to enable it, double-check that it is properly secured.\n\nThe patch for this issue is available here: https://github.com/symfony/symfony/pull/11832", "methods": ["CSRF (Cross-Site Request Forgery) attacks via the import/export feature of the Web Profiler.", "Code injection via PHP serialize/unserialize functions.", "Use of a development tool (Web Profiler) in a production environment."]}