{"description": "### Impact\n\nBy sending a crafted HTTP request, it is possible to poison the cache of a non-dynamic server-side rendered route in the pages router (this does not affect the app router). When this crafted request is sent it could coerce Next.js to cache a route that is meant to not be cached and send a `Cache-Control: s-maxage=1, stale-while-revalidate` header which some upstream CDNs may cache as well. \n\nTo be potentially affected all of the following must apply: \n\n- Next.js between 13.5.1 and 14.2.9\n- Using pages router\n- Using non-dynamic server-side rendered routes e.g. `pages/dashboard.tsx` not `pages/blog/[slug].tsx`\n\nThe below configurations are unaffected:\n\n- Deployments using only app router\n- Deployments on [Vercel](https://vercel.com/) are not affected\n\n\n### Patches\n\nThis vulnerability was resolved in Next.js v13.5.7, v14.2.10, and later. We recommend upgrading regardless of whether you can reproduce the issue or not.\n\n### Workarounds\n\nThere are no official or recommended workarounds for this issue, we recommend that users patch to a safe version.\n\n#### Credits\n\n- Allam Rachid (zhero_)\n- Henry Chen", "methods": ["Sent a crafted HTTP request to poison the cache of a non-dynamic server-side rendered route.", "Coerced Next.js to cache a route that is meant to not be cached.", "Sent a `Cache-Control: s-maxage=1, stale-while-revalidate` header to cache the route.", "Exploited a vulnerability in Next.js between 13.5.1 and 14.2.9.", "Exploited a vulnerability in non-dynamic server-side rendered routes.", "Exploited a vulnerability in pages router.", "Used a crafted request to affect a deployment using only app router.", "Used a crafted request to affect a deployment on Vercel."]}