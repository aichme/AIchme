{"description": "### Impact\nEditors that use `MediaEmbedElement` and pass custom `urlParsers` to the `useMediaState` hook may be vulnerable to XSS if a custom parser allows `javascript:`, `data:` or `vbscript:` URLs to be embedded. Editors that do not use `urlParsers` and instead consume the `url` property directly may also be vulnerable if the URL is not sanitised.\n\nThe default parsers `parseTwitterUrl` and `parseVideoUrl` are not affected.\n\nExamples of vulnerable code:\n\n```tsx\nconst { embed } = useMediaState({\n  urlParsers: [\n    // Custom parser that does not use an allowlist or validate the URL protocol\n    (url) => ({ url }),\n  ],\n});\n\nreturn (\n  <iframe\n    src={embed!.url}\n    // ...\n  />\n);\n```\n\n```tsx\nconst { url } = useMediaState();\n\nreturn (\n  <iframe\n    // url property used directly from useMediaState() with no sanitisation\n    src={url}\n    // ...\n  />\n);\n```\n\n\n```tsx\nconst { url } = element;\n\nreturn (\n  <iframe\n    // url property used directly from element with no sanitisation\n    src={url}\n    // ...\n  />\n);\n```\n\n### Patches\n`@udecode/plate-media` 36.0.10 resolves this issue by only allowing HTTP and HTTPS URLs during parsing. This affects only the `embed` property returned from `useMediaState`.\n\nIn addition, the `url` property returned from `useMediaState` has been renamed to `unsafeUrl` to indicate that it has not been sanitised. The `url` property on `element` is also unsafe, but has not been renamed. If you're using either of these properties directly, you will still need to validate the URL yourself.\n\n### Workarounds\nEnsure that any custom `urlParsers` do not allow `javascript:`, `data:` or `vbscript:` URLs to be returned in the `url` property of their return values.\n\nIf `url` is consumed directly, validate the URL protocol before passing it to the `iframe` element.\n\n### References\nHow to verify the protocol of a URL: https://stackoverflow.com/a/43467144", "methods": ["Used a custom URL parser that does not use an allowlist or validate the URL protocol.", "Used the `url` property directly from `useMediaState()` with no sanitisation.", "Used the `url` property directly from an element with no sanitisation.", "Used an iframe element with a `src` attribute set to an unsanitised URL."]}