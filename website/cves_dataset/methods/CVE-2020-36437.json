{"description": "Affected versions of this crate unconditionally implemented `Send`/`Sync` for `QueueSender<T>`, allowing to send non-Send `T` to other threads by invoking `(&QueueSender<T>).send()`.\n\nThis fails to prevent users from creating data races by sending types like `Rc<T>` or `Arc<Cell<T>>` to other threads, which can lead to memory corruption. The flaw was corrected in commit `1e462c3` by imposing `T: Send` to both `Send`/`Sync` impls for `QueueSender<T>`/`QueueReceiver<T>`.", "methods": ["Implemented Send/Sync trait for QueueSender<T> without bounds check.", "Failed to prevent data races by sending non-Send types to other threads.", "Created memory corruption vulnerability."]}